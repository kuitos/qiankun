"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatJSXProps = void 0;

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function _react() {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-new-wrappers */

/**
 * transform props base on JSX rule
 * @param props   original props
 */
const formatJSXProps = props => {
  const OMIT_NULL_PROPS = ['alt', 'align'];
  return Object.keys(props || {}).reduce((result, key) => {
    // ignore useless empty props
    if (props[key] !== null || !OMIT_NULL_PROPS.includes(key)) {
      result[key] = props[key];
    } // use wrapper object for workaround implement raw props render
    // https://github.com/mapbox/jsxtreme-markdown/blob/main/packages/hast-util-to-jsx/index.js#L167


    if (!(props[key] instanceof String) && props[key] !== null && (typeof props[key] === 'object' || Array.isArray(props[key]))) {
      result[key] = new String(JSON.stringify(props[key]));
    }

    return result;
  }, {});
};

exports.formatJSXProps = formatJSXProps;